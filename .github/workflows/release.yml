# Create release workflow
name: 🎁 Create release

defaults:
  run:
    shell: bash -ieo pipefail {0}

on:
  # Can be triggered only by other workflows
  workflow_call:
    inputs:
      release_version:
        type: string
        description: 'Release version formatted as "vMM.mm.pp"'
        required: true

jobs:

  calculate-release-version:
    name: 🧮 Calculate release version
    runs-on: ubuntu-latest
    outputs:
      RELEASE_VERSION: ${{ steps.result.outputs.RELEASE_VERSION }}
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 🧮 Calculate version
        shell: bash
        id: result
        run: |
          RELEASE_VERSION=${{ inputs.release_version }}
          if [[ -n $RELEASE_VERSION ]] && [[ $RELEASE_VERSION =~ v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+ ]]; then
            echo "[INFO] Release version: $RELEASE_VERSION"
            echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_OUTPUT
          else
            echo "[ERROR] RELEASE_VERSION is '$RELEASE_VERSION' and it's invalid for a workflow_call";
            exit 1;
          fi

  create-release:
    name: 🎁 Create release
    runs-on: ubuntu-latest
    needs: calculate-release-version
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ inputs.release_version }}

      - name: 📰 Generate RELEASE.md
        run: |
          # Generate a RELEASE.md with only the first section of the CHANGELOG.md
          line=$(cat CHANGELOG.md | grep -n -m 2 "## \[" | tail -n 1 | sed -r 's/([[:digit:]]*):.*/\1/g')
          head -n $((line - 1)) CHANGELOG.md > RELEASE.md
          echo "See the full [CHANGELOG.md](https://github.com/planetsLightningArrester/parser-de-notas-de-corretagem/blob/main/CHANGELOG.md)" >> RELEASE.md

      - name: 🚀 Publish release
        id: create_release
        uses: ncipollo/release-action@v1.13.0
        with:
          tag: ${{ needs.calculate-release-version.outputs.RELEASE_VERSION }}
          bodyFile: ./RELEASE.md

  npm-release:
    name: 📦 NPM release
    runs-on: ubuntu-latest
    needs: create-release
    steps:
    - name: Checkout code 📥
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ inputs.release_version }}
      
    - name: NodeJS setup 🛠️
      uses: actions/setup-node@v3
      with:
        node-version: 18
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies and build 🔧
      run: npm ci && npm run build && npm run pack

    - name: Publish package on NPM 🚀
      run: npm run pub
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

# EOF
# Create release workflow

name: Create release

defaults:
  run:
    shell: bash -ieo pipefail {0}

on:
  # Can be triggered only by other workflows
  workflow_call:
    inputs:
      release_version:
        type: string
        description: 'Release version formatted as "vMM.mm.pp"'     
        required: true

jobs:

  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code 📥
        uses: actions/checkout@v3

      - name: Set Release version 🏷️
        shell: bash
        run: |
          RELEASE_VERSION=${{ inputs.release_version }}
          if [[ -n $RELEASE_VERSION ]] && [[ $RELEASE_VERSION =~ v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+ ]]; then
            echo "[INFO] Release version: $RELEASE_VERSION"
            echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
          else
            echo "[ERROR] RELEASE_VERSION is '$RELEASE_VERSION' and it's invalid for a workflow_call";
            exit 1;
          fi

      - name: Create Release 📦
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }} # Create a "personal token" and added as a "secret" in the repo settings
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: Parser ${{ env.RELEASE_VERSION }}
          body_path: ./CHANGELOG.md

  # Release on NPM
  npm-release:
    runs-on: ubuntu-latest
    needs: create-release
    
    steps:
    - name: Checkout code 📥
      uses: actions/checkout@v3
      with:
        ref: ${{ github.ref }}
      
    - name: NodeJS setup 🛠️
      uses: actions/setup-node@v3
      with:
        node-version: 18
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies and build 🔧
      run: npm ci && npm run build && npm run pack

    - name: Publish package on NPM 🚀
      run: npm run pub
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

# EOF
# Continuos Integration workflow
name: üîÑ CI

defaults:
  run:
    shell: bash -ieo pipefail {0}

# Controls when the workflow will run
on:
  # Main push
  push:
    branches: ['main']
    paths-ignore:
      - README.md
      - CHANGELOG.md
      - LICENSE
      - .github/workflows/release.yml
      - .github/workflows/assets-auto-update.yml
      
  # Any pull request update
  pull_request:
    branches: ['main']
    paths-ignore:
      - README.md
      - CHANGELOG.md
      - LICENSE
      - .github/workflows/release.yml
      - .github/workflows/assets-auto-update.yml

  # Can be triggered by other workflows
  workflow_call:
    inputs:
      skip_crawler_test:
        type: boolean
        description: 'Whether the crawler test should run'
        required: true
        default: false

  # Allow manual trigger
  workflow_dispatch:

# Jobs
jobs:

  dividends:
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v3

      - name: üõ†Ô∏è NodeJS setup
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: üîß Install dependencies
        run:  npm ci
      
      - name: üß™ Run test
        run:  npm run test dividends

  rico-compliance:
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v3

      - name: üõ†Ô∏è NodeJS setup
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: üîß Install dependencies
        run:  npm ci
      
      - name: üß™ Run test
        run:  npm run test rico

  clear-compliance:
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v3

      - name: üõ†Ô∏è NodeJS setup
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: üîß Install dependencies
        run:  npm ci
      
      - name: üß™ Run test
        run:  npm run test rico

  crawler:
    # Skip check if this CI was triggered by another workflow
    if: ${{ ! inputs.skip_crawler_test }}
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v3

      - name: üõ†Ô∏è NodeJS setup
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: üîß Install dependencies
        run:  npm ci
      
      - name: üß™ Run test
        run:  npm run test crawler

  webpack:
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v3

      - name: üõ†Ô∏è NodeJS setup
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: üîß Install dependencies and build
        run: npm ci && npm run build && npm run pack
      
      - name: üß™ Run test
        run:  npm run test webpack

  # Releases are generated when the commit has a tag associated with it
  check_if_release_is_required:
    name: üîé Check if release is required
    runs-on: ubuntu-latest
    needs: [ dividends, rico-compliance, clear-compliance, crawler, webpack ]
    # Skip check if this CI was triggered by another workflow
    if: ${{ ! inputs.skip_crawler_test }}
    outputs:
      RELEASE_VERSION: ${{ steps.result.outputs.RELEASE_VERSION }}
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: üîé Check if a new release has to be created
        id: result
        shell: bash
        run: |
          # Check if the commit has a tag matching `\d+\.\d+\.\d+\$`
          tag="$(git describe --tags)"
          echo "[$(date +"%T")] [DEBUG] Checking tag ${tag}";
          if [[ -n "${tag}" ]] && [[ "${tag}" =~ v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+$ ]]; then
            RELEASE_VERSION=v$(echo "${tag}" | sed -r -n 's/v([[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+).*/\1/p');
            [[ -n "${RELEASE_VERSION}" ]] && echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_OUTPUT;
          else
            echo "[$(date +"%T")] [DEBUG] Tag ${tag} isn't a release tag";
          fi

  # Trigger the release if a tag with a version was submitted
  make_release:
    name: üéÅ Make release
    needs: check_if_release_is_required
    if: ${{ needs.check_if_release_is_required.outputs.RELEASE_VERSION }}
    uses: ./.github/workflows/release.yml
    secrets: inherit
    with:
      release_version: ${{ needs.check_if_release_is_required.outputs.RELEASE_VERSION }}

# EOF
